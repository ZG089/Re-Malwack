name: Update Hosts

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  update-hosts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout hosts-update branch only
        uses: actions/checkout@v4
        with:
          ref: 'hosts-update'
          fetch-depth: 0

      - name: Set up dependencies
        run: sudo apt update && sudo apt install -y curl

      - name: Download Hosts Files
        run: |
          sources=(
            "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/hosts/multi.txt"
            "https://badmojr.github.io/1Hosts/Lite/hosts.txt"
            "https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardDNS.txt"
            "https://raw.githubusercontent.com/r-a-y/mobile-hosts/refs/heads/master/AdguardMobileAds.txt"
            "https://raw.githubusercontent.com/r-a-y/mobile-hosts/refs/heads/master/AdguardMobileSpyware.txt"
          )
          for url in "${sources[@]}"; do
            curl -sL "$url" >> raw_hosts.txt
            echo "" >> raw_hosts.txt  # Ensure newline separation
          done

      - name: Download Whitelist
        run: |
          curl -sL "https://raw.githubusercontent.com/ZG089/Re-Malwack/main/whitelist.txt" -o whitelist.txt

      - name: Clean and Merge Hosts
        run: |
          echo "Cleaning hosts..."
          sed '/^[[:space:]]*#/d; /^[[:space:]]*$/d; s/^[[:space:]]*//; s/\t/ /g; s/  */ /g' raw_hosts.txt > tmp_hosts.txt
          sort -u tmp_hosts.txt > hosts
          rm -f tmp_hosts.txt
          rm -f raw_hosts.txt

      - name: Remove Whitelisted Domains
        run: |
          echo "Filtering whitelist..."

          if [ -s whitelist.txt ]; then
            while IFS= read -r domain; do
              escaped_domain=$(printf '%s' "$domain" | sed 's/[]\/$*.^|[]/\\&/g')
              sed -i "/^0\.0\.0\.0 $escaped_domain$/d" hosts
            done < whitelist.txt
          rm -f whitelist.txt
          fi

      - name: Commit and push updated hosts file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add hosts
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$LAST_COMMIT_MSG" == "Update hosts file" ]]; then
            git commit --amend --no-edit
            git push --force
          else
            git commit -m "Update hosts file"
            git push
          fi