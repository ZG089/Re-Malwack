name: build

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
      - 'update.json'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
      - 'update.json'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set variables
        id: setup
        run: |
          COMMIT_NUM=$(git rev-list --count HEAD)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION=$(jq -r .version update.json)
          TEST_BUILD_ID="${COMMIT_NUM}-${COMMIT_HASH}"
          ZIP_NAME="Re-Malwack_${VERSION}-${TEST_BUILD_ID}"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "COMMIT_NUM=$COMMIT_NUM" >> $GITHUB_ENV
          echo "SHORT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
          echo "TEST_BUILD_ID=$TEST_BUILD_ID" >> $GITHUB_ENV

      - name: Update module.prop version
        run: |
          sed -i "s/^version=.*/version=${VERSION}-test (${TEST_BUILD_ID})/" module/module.prop
          echo "Updated module.prop:"
          grep "^version=" module/module.prop

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: module/

      - name: Create ZIP
        run: |
          cd module
          zip -r "../$ZIP_NAME.zip" ./*
          cd ..

      - name: Check Commit Info
        id: check_commit
        run: |
          COMMIT_MSG='${{ github.event.head_commit.message }}'
          if echo "$COMMIT_MSG" | head -n1 | grep -qiE "release|version|readme|website|site"; then
            echo "SKIP=true" >> $GITHUB_ENV
          else
            echo "SKIP=false" >> $GITHUB_ENV
          fi
          echo "SKIP_RELEASE: $SKIP"

      - name: Send Release
        if: env.SKIP == 'false'
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          THUMB: $GITHUB_WORKSPACE/assets/dl.jpg
          COMMIT_HASH: "${{ github.sha }}"
          COMMIT_MSG_RAW: "${{ github.event.head_commit.message }}"
          COMMIT_URL: "${{ github.event.head_commit.url }}"
        run: |
          COMMIT_MSG=$(echo "$COMMIT_MSG_RAW")
          curl -sS "https://api.telegram.org/bot$BOT_TOKEN/sendDocument" \
              -F chat_id="-1002271023118" \
              -F message_thread_id="1314" \
              -F document=@"${{ env.ZIP_NAME }}.zip" \
              -F thumb=@"${{ env.THUMB }}" \
              -F caption="⚙️ *New test release!*
          \`\`\`
          $COMMIT_MSG
          \`\`\`
          Base Version: \`${VERSION}\`
          Test Build ID: \`#${TEST_BUILD_ID}\`
          =================================
          [- View Commit -]($COMMIT_URL)
          [- Workflow Run -]($RUN_URL)" \
              -F parse_mode="Markdown"